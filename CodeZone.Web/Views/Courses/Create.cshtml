@model CodeZone.DataAccess.Models.Course

@{
    ViewData["Title"] = "Create course";
}

<h2>Create course</h2>

<form asp-action="Create" method="post">
    <div asp-validation-summary="All"></div>
    @Html.AntiForgeryToken()

    <div class="form-group">
        <label asp-for="Title" class="control-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <input asp-for="Description" class="form-control" />
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="MaxCapacity" class="control-label"></label>
        <input asp-for="MaxCapacity"  class="form-control" />
        <span asp-validation-for="MaxCapacity" class="text-danger"></span>
    </div>

    

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <strong>Validation Error:</strong> Please correct the errors and try again.
        </div>
    }

    <div class="form-group mt-3">
        <button type="submit" class="btn btn-primary">Create</button>
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}